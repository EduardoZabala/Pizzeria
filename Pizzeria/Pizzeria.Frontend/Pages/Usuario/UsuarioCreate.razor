@using CurrieTechnologies.Razor.SweetAlert2;
@using Microsoft.AspNetCore.Components;
@using Pizzeria.Frontend.Repositories;
@using Pizzeria.Shared.Entities;
@page "/users/create"

<h3>Crear Usuario</h3>

<UsuarioForm @ref="usuarioForm" Usuario="usuario" OnValidSubmit="CreateAsync" ReturnAction="Return" />


@code {

        private UsuarioForm? usuarioForm;

        [Inject] private IRepository Repository { get; set; } = null!;
        [Inject] private NavigationManager NavigationManager { get; set; } = null!;
        [Inject] private SweetAlertService SweetAlertService { get; set; } = null!;

        private Usuario usuario = new();

        private async Task CreateAsync()
        {
            var responseHttp = await Repository.PostAsync("/api/Usuario", usuario);
            if (responseHttp.Error)
            {
                var message = await responseHttp.GetErrorMessageAsync();
                await SweetAlertService.FireAsync("Error", message);
                return;
            }

            Return();
            var toast = SweetAlertService.Mixin(new SweetAlertOptions
                {
                    Toast = true,
                    Position = SweetAlertPosition.BottomEnd,
                    ShowConfirmButton = true,
                    Timer = 3000
                });
            await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito.");
        }

        private void Return()
        {
            usuarioForm!.FormPostedSuccessfully = true;
            NavigationManager.NavigateTo("/users");
        }
    }

